"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var presets_1 = require("./presets");
var presets = {
    angular: presets_1.angular,
    atom: presets_1.atom,
    eslint: presets_1.eslint,
    ember: presets_1.ember,
    jquery: presets_1.jquery,
    jshint: presets_1.jshint
};
function validateMessage(message, options) {
    if (options === void 0) { options = {}; }
    if (!message) {
        return false;
    }
    message = message.trim();
    options = Object.assign({
        preset: 'angular'
    }, options);
    var preset = presets[options.preset];
    if (!preset) {
        throw new Error("Preset '" + options.preset + "' does not exist. A preset must be provided");
    }
    var validate = preset.validate, ignorePattern = preset.ignorePattern;
    if (ignorePattern && ignorePattern.test(message)) {
        if (process.env.SILENT === 'true' || !process.env.SILENT) {
            console.warn('Commit message validation ignored.');
        }
        return true;
    }
    return validate(message);
}
exports.validateMessage = validateMessage;
;
function getMessageFromBuffer(buffer) {
    return buffer.toString();
}
;
function validateMessageFromFile(file, options) {
    if (options === void 0) { options = {}; }
    var buffer = fs.readFileSync(file);
    var message = getMessageFromBuffer(buffer);
    return validateMessage(message, options);
}
exports.validateMessageFromFile = validateMessageFromFile;
;
exports.default = presets;
