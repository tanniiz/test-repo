"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helpers_1 = require("../helpers");
exports.jshint = {
    validate: function (message) {
        var HEADER_LENGTH = 60;
        var LINES_LENGTH = 100;
        var GH = '(?:(?:[A-Za-z0-9_-]+)\\/(?:[A-Za-z0-9_.-]+))?(?:(?:#|[Gg][Hh]-)\\d+)';
        var SHORTDESCR = "((?=[A-Z0-9])(?:(?!" + GH + ").)*)";
        var TITLE = '\\[{2}([A-Z]+)\\]{2}';
        var FIXUP = '(?:fixup!\\s*)?';
        var HEADER_PATTERN = new RegExp("^" + FIXUP + TITLE + "\\s" + SHORTDESCR + "$");
        var lines = message.trim().split('\n').map(function (line) { return line.trim(); });
        var header = lines.shift();
        if (header.length > HEADER_LENGTH) {
            helpers_1.log("Header is longer than " + HEADER_LENGTH + " characters.", 'error');
            return false;
        }
        var match = HEADER_PATTERN.exec(header);
        if (!match) {
            helpers_1.log('Header does not match "[[TYPE]] Short description".', 'error');
            helpers_1.log("Given: \"" + header + "\".", 'info');
            return false;
        }
        var TITLES = ['FIX', 'FEAT', 'DOCS', 'TEST', 'CHORE'];
        if (TITLES.indexOf(match[1]) === -1) {
            helpers_1.log("The word \"" + match[1] + "\" is not an allowed title.", 'error');
            helpers_1.log("Valid titles are: " + TITLES.join(', ') + ".", 'info');
            return false;
        }
        if (lines.length === 0) {
            return true;
        }
        var secondLine = lines.shift();
        if (secondLine.length > 0) {
            helpers_1.log('Second line of commit message must be a blank line.', 'error');
            return false;
        }
        if (!lines.every(function (line) { return line.length <= LINES_LENGTH; })) {
            helpers_1.log("Line lengths (except first) should be wrapped at " + LINES_LENGTH + " columns.", 'error');
            return false;
        }
        return true;
    },
    ignorePattern: /^\[{2}WIP\]{2}/
};
